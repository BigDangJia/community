<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--  namespace也就是指定这个mapper文件要进行配置到哪个类上边 -->
<mapper namespace="com.peng.community.dao.UserMapper">

    <sql id="inserttFields">
        username,password,salt,email,type,status,activation_code,header_url,create_time
    </sql>

    <sql id="selectFields">
        id,username,password,salt,email,type,status,activation_code,header_url,create_time
    </sql>

    <select id="selectById" resultType="User">  <!-- 正常来说返回值类型应该使用全限定类名 但是我们在配置文件中你已经指定了entiry所在的文件夹，所以我们现在只需要写类名就可以了 -->
      select *
        from user
          where id = #{id}; <!-- 因为参数使用的就是id ，所以我们就可以直接使用#{参数名称}  就可以完成 语句的编写-->
    </select>

    <select id="selectByName" resultType="User">
        select *
          from USER
            where userName = #{userName};
    </select>

    <select id="selectByEmail" resultType="User">
        select <include refid="selectFields"/>
          FROM USER
            WHERE email = #{email};
    </select>

    <insert id="insertUser" parameterType="User" keyProperty="id">
        INSERT INTO USER (<include refid="inserttFields"/> )<!-- 要进行导入的数据信息 -->
        VALUES (#{username},#{password},#{salt},#{email},#{type},#{status},#{activationCode},#{headerUrl},#{createTime});
    </insert>

    <update id="updateStatus">
       UPDATE USER SET status = #{status} WHERE id = #{id}
    </update>

    <update id="updateHeader">
        UPDATE user set header_url=#{header_url}
        where id = #{id};
    </update>

    <update id="updatePassword">
        UPDATE user set password=#{password}
        where id = #{id};
    </update>



</mapper>